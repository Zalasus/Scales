

namespace System;

script Out

	public func void println(string s)
	
	end

end

namespace Util;

script Integer

	private int value;

	public init(int i)
	
		value = i;
	
	end
	
	public init()
	
		this(0);
		
	end
	
	public func int getValue()
	
		return value;
	
	end

end

script Math

	private object o = new Integer();
	private int i = (o -> Integer).getValue();

	public func int mod(int a, int mod)
	
		return a - (a/mod) * mod; #Since a and mod both are ints, the the division will yield a floored int instead of a float
	
	end

end


namespace default;

script byValueTest

	private func void foo(int i)
	
		i = 10;
	
	end
	
	private func void bar()
	
		int j = 5;
		
		foo(j);
		# j is now 10
		
		j = 5;
		
		foo($j);
		# j is still 5
		
		
		begin
			int a = 2;
			int b = a;
			
			a = 5;
			# both a and b are now 5
		end
		
		begin
			int a = 2;
			int b = $a;
			
			a = 5;
			#a is now 5, b is still 2
		end
	
	end
	

end

script Main

	int i = 1;

	public event main()
	
		Util:Integer i = new Util:Integer();
	
	end


	public func void foo()
	
	end
	
	public func int boo()
	
	end
	
	public func void xyz()
	
		foo();
		
		boo();
		
		int i = boo();
		
		#i = foo();
	
	end

	i = 1234;

end 


